name: Continuous Integration

on:
  - push

jobs:
  build:
    permissions:
      contents: write
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Use Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18.x

      - name: Get npm cache directory path
        id: npm-cache-dir-path
        run: echo "::set-output name=dir::$(npm config get cache)"

      - name: get-npm-version
        id: package-version
        uses: actions/github-script@v3.0.0
        with:
          script: |
            const path = require('path')
            const scriptPath = path.resolve('.github/workflows/print-esy-bash-version.js')
            require(scriptPath)(core, path.resolve('./package.json'))

      - name: Cache npm dependencies
        uses: actions/cache@v3.3.1
        with:
          path: ${{ steps.npm-cache-dir-path.outputs.dir }}
          key: npm-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            npm-

      - name: Try to restore esy cache
        uses: actions/cache@v3.3.1
        with:
          path: ~/.esy # This can grow quickly. Must be following by rm -rf ~/.esy/3/b
          key: source-${{ hashFiles('re/**/index.json') }}

      - name: Install esy
        run: npm install -g esy@beta

      - name: Try to restore .cygwin/ cache
        uses: actions/cache@v3.3.1
        with:
          path: .cygwin
          key: cygwin-20230614001-${{ hashFiles('build-cygwin.js') }} # the number is nothing but date and an arbitrary incrementing number. This number is useful to bust the cache

      - name: Download and setup Cygwin
        run: ./package.ps1
        shell: pwsh

      - uses: actions/upload-artifact@v3
        with:
          name: release
          path: esy-bash-${{ steps.package-version.outputs.version}}.tgz

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: esy-bash-${{ steps.package-version.outputs.version}}.tgz

